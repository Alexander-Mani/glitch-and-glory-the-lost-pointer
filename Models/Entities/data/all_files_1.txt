========= ./TechnoOracleModel.cpp =========
#include "TechnoOracleModel.h"
#include <iostream>

TechnoOracleModel::TechnoOracleModel()
    : EntityModel(
        "Techno Oracle",    // Name                    
        100,                // hp        
        20,                 // atk        
        15,                 // def    
        70,                 // magic        
        15,                 // crit        
        10,                 // evade    
        {                   // ascii_art
        "                                 ", 
        "                                 ", 
        "                                 ", 
        "                                 ", 
        "                                 ", 
        "            :.:-+++*=            ", 
        "           :=#%%**#%#*           ", 
        "          :*@@@%@#@@*#           ", 
        "          -#@@#%%@%%#            ", 
        "           #%#%@%#%%             ", 
        "           ##%%%@@@%#=   *       ", 
        "            ###%%%#*+=#=====+%   ", 
        "           ==-=*+:::+@=@@@@@@%   ", 
        "       :+-:--==+*###%@@@@+@@@%*  ", 
        "      =#+:=.:###%@%@@@@@%@*@@%#  ", 
        "      ##+%-:*@@@@@@@@@@@@@%%@@%  ", 
        "       =#@+#@@@@@#@@@@@##@@##%%# ", 
        "       #@#+%@@%@@@@%%### %@@@%%* ", 
        "      =@%*%%@@@%@@%%*#%   %@%@%= ", 
        "      *@##%#@%@@@@#%%      %*-#%%",
        "     +*@@%%*#@@@@@@%      #+#+%%*",
        "    =-#@%*##@@@@%%%#@%    ++##@@@",
        "   ==*%#*+*+*%@@@#@@%%    +##@@@ ", 
        "   -###*@#**@@@@@@@@%##   *==%@  ", 
        "  =*%**=@@#%%@@@@#@+*#-* +=@@@@  ", 
        " =+%%#-+@@@##%@@#=#@@%%%#*#@@%@  ", 
        " *%%#*+##@@@@%%%+@@@@%@#%%@@@%   ", 
        "*#%% %#@@@@@@%#%%@@@@@%%%###%    ", 
        "*#%% *%@@@@@@@% %%@@@@@@%#%#+    ", 
        "%#++ *%%@@@@@@% %%@@@@@@%%%      ", 
        "  %# %%%%%%@@%# %#%%%@@@@        ", 
        "      ##%%%#%#   %%%%%@@%        ", 
        "      %%%%#*#*    %@%@@%#        ", 
        "      %%@@%##@    #%%@@@%@       ", 
        "      %%%%%@%%    ##%%@@@%       ", 
        "      *#%%%%@@@    #%%%@@%%      ", 
        "       #%@%%%%%     %%@@@@@%     ", 
        "        %%%%%%%%    #%@@@@@@     ", 
        "        %%%%####    %#%%%%%%     ", 
        "        #%%%##*     ##%%%%%#     ", 
        "        #%%###        #%%%%#     ", 
        "        *%%%@%        #%@@%#     ", 
        "       *+@@@@%        +**%%#     ", 
        "      ##@%%%%*        *@%%@@     ", 
        "     ***%@@%%#*      +@%@@%%     ", 
        "  ##+%%@%%%@@%#       ###%@#     ", 
        " %#%@@@@@@@@         #%%#%%%     ", 
        "                    %*%%%@%      " 
    },
    new WeaponModel(
        "Singularity Codex",            // Weapon Name
        100,                             // Weapon Damage
        90,                             // Hit Rate
        "You have hit the enemy!",      // Hit message
        "You missed the enemy homie!"   // Miss message
    )
    ) {}


========= ./EntityModel.h =========
#ifndef ENTITY_MODEL_H
#define ENTITY_MODEL_H

#include <string>
#include <vector>
#include <unordered_map>

#include "../WeaponModel.h"

// Forward declaration of EntityModel due to circular import
class WeaponModel;


class EntityModel {
protected:
    std::string name;
    int hp;
    int atk;
    int def;
    int magic;
    int crit;
    int evade;
    std::vector<std::string> ascii_art;
    WeaponModel *weapon;

public:
    EntityModel(const std::string &name, int hp, int atk, int def, int magic, int crit, int evade, std::vector<std::string> ascii_art, WeaponModel *weapon);
    
    virtual ~EntityModel() = default;

    // Default implementation prints the common stats.
    virtual void display_stats() const;
    
    void display_ascii() const;
    
    const std::vector<std::string>& get_ascii() const { return ascii_art; }

    std::string get_name() const { return name; }
    int get_hp() const { return hp; }
    int get_atk() const { return atk; }
    int get_def() const { return def; }
    int get_magic() const { return magic; }
    int get_crit() const { return crit; }
    int get_evade() const { return evade; }

    std::vector<int> get_battle_stats() const {
        return {hp, atk, def, magic, crit, evade};
    }

    std::vector<std::string> get_battle_stat_names() const{
        return {"Health", "Attack", "Defence", "Magic", "Critical", "Evasion"};
    }

    virtual void decrease_hp(int damage) {
        hp -= damage;
        if(hp < 0) hp = 0;
    }

    /*
     * @brief Simply gets the weapon for Entity
     */
    WeaponModel *get_weapon();


};

#endif // ENTITY_MODEL_H






//============================================//
//======= TOMMI OLD CODE FOR REFERENCE =======//
//============================================//

// #ifndef ENTITYPARENTMODEL_H
// #define ENTITYPARENTMODEL_H

// #include <string>

// class Entity {
// protected:
//     std::string name;
//     int hp;
//     int atk;
//     int def;
//     int magic;
//     int crit;
//     int evade;

// public:
//     Entity(const std::string &name, int hp, int atk, int def, int magic, int crit, int evade);
//     virtual ~Entity() = default;

//     virtual void displayStats() const = 0;

//     std::string getName() const { return name; }
//     int getHP() const { return hp; }
//     int getATK() const { return atk; }
//     int getDEF() const { return def; }
//     int getMagic() const { return magic; }
//     int getCrit() const { return crit; }
//     int getEvade() const { return evade; }
// };

// class TechnoOracle : public Entity {
// public:
//     TechnoOracle();
//     void displayStats() const override;
// };

// class CyberGladiator : public Entity {
// public:
//     CyberGladiator();
//     void displayStats() const override;
// };

// class BioEnhancedBerserker : public Entity {
// public:
//     BioEnhancedBerserker();
//     void displayStats() const override;
// };

// #endif


========= ./TechnoOracleModel.h =========
#ifndef TECHNO_ORACLE_MODEL_H
#define TECHNO_ORACLE_MODEL_H

#include "EntityModel.h"
#include "../WeaponModel.h"

class TechnoOracleModel : public EntityModel {
public:
    TechnoOracleModel();
};

#endif // TECHNO_ORACLE_MODEL_H


========= ./CyberGladiatorModel.cpp =========
#include "CyberGladiatorModel.h"
#include <iostream>

CyberGladiatorModel::CyberGladiatorModel()
    : EntityModel(
        "Cyber Gladiator",  // Name 
        150,                // hp         
        20,                 // atk         
        10,                 // def         
        5,                  // magic     
        10,                 // crit         
        10,                 // evade     
        {                   // ascii_art
        "                                                                          ", 
        "                                                                          ", 
        "                                                                          ", 
        "                                                                          ", 
        "                                                                          ", 
        "                                  ..........                              ", 
        "                                ..-%%%%%%%##+=-:..                        ", 
        "                                .-@@@@@@@@@@@@@@=.                        ", 
        "                               .*@@@@@@@@@@@@@%-.                         ", 
        "                            ..-@@@@@@@@@@@@@#-=*%@%*+*%#=-::......        ", 
        "                          ...*@@@@@@@@@@@@@@@@#@%#:-*%@@@@@@@@@@@-        ", 
        "                          .-@@@@@@@@@@@@@@@@@@@@@@%=...-%@@@@@@@@#.       ", 
        "                          .:+*##*+*%*@@@@@@@@@@@@@@@%:   ...:*@@@@=.      ", 
        "                                ..-%@@@@@@@@@@@@@@@@@-       ...+%@-.     ", 
        "                                ..@@@@@@@@@@@@@@@@@@@%..         ..==.    ", 
        "                                .*@@@@@@@@@@@@@@@@@@@@@..                 ", 
        "                                .@@@@@@@@@@@@@@@@@@+%@@@-                 ", 
        "                               .-@@@@@@@@@@@@@@@@@@::@@:.                 ", 
        "                               .*@@@@@@@@@@@@@@@@@@..*-.                  ", 
        "                               -@@@@@@@@@@@@@@@@@@@...-.                  ", 
        "                               .*@@@@@@@@@@@@@@@@@@%.                     ", 
        "                             ..+@@@@@@@@@@@@@@@@@@@=.                     ", 
        "                             ..%@@@@@@@@@@@@@@@@@@=.                      ", 
        "                               -@@@@@@@@@@@@@@@@%.                        ", 
        "                              .@@@@@@@@@@@@@@@@#.                         ", 
        "                             .+@@@@@@@@@@@@@@@@@*.                        ", 
        "                             .=@@@@@@@@@@@@@@@@@@:                        ", 
        "                          ...-@@@@@@@@@@@@@@@@@@@+..                      ", 
        "                          ..=@@@@@@@@@@@@@@@@@@@@@%:.                     ", 
        "                         ..*@@@@@@@@@@@@@@@@@@@@@=@@%-..                  ", 
        "                       ..:@@@@@@@@@@@@@@@@@@@@@@@..+@@@:.                 ", 
        "                      ..#@@+@@@@@@@@@@@@@@@@@@@@@.  .-@@@+..              ", 
        "                    ..:@@#.#@@@@@@@@@@@@@@@@@@@@@.     .#@@%..            ", 
        "                   ..*@@:.+@@@@@@@@@@@@@@@@@@@@@@%..   ...+@@#-..         ", 
        "                  .-@@=..-@@@@@@@@@@@@@@@@@@@@@@@@+.        .#@@*...      ", 
        "                ..#@*...=@@@@@@@@@@@@@@@@@@@@@@@@@%:.        ..=@@%-.     ", 
        "             ...+@%:...-@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%+.        .:#@@#... ", 
        "            ..=@@=....+@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@+           ...=%@@*:",
        "          ...#@*.  .+@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%:                .-%%",
        "         ..*@#.    .:*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#+                     ", 
        "      ...-@@:.      .-+*@@@@@@@@@@@@@@@@@@@@@@@@@@=.                      ", 
        "     ..:%@=.             .++:..:#@@@@@@=@@@%*@@@@@-.                      ", 
        "   ..:%%-.                .    .*@@@@@.:*=. .#@@@@..                      ", 
        "  .-%%-.                     ..-@@@@*....   .*@@@@..                      ", 
        ".:%@:..                  ...-#@@@@@@%..    .=@@@@@=.                      ", 
        "-+-..                    .+@@@@%+==*@=.   ..%@@@@@+.                      ", 
        "                             ..    ....    ..-=+=:..                      ", 
        "                                               .                          " 
        },
        new WeaponModel(
            "Titan Protocol",               // Weapon Name
            50,                             // Weapon Damage
            100,                            // Hit Rate
            "You have hit the enemy!",      // Hit message
            "You missed the enemy homie!"   // Miss message
        )
    ) {}



========= ./BioEnhancedBerserkerModel.cpp =========
#include "BioEnhancedBerserkerModel.h"
#include <iostream>

BioEnhancedBerserkerModel::BioEnhancedBerserkerModel()
    : EntityModel(
        "Bio-Enhanced Berserker",   // Name
        150,                        // hp
        30,                         // atk
        7,                          // def
        5,                          // magic
        5,                          // crit
        5,                          // evade
        {                           // ascii_art
        "           +=*++#*                                      ", 
        "        +######%%%###*+==-                              ", 
        "      +***#%%%%%%%###*+======-=====                     ", 
        "     ***##%%%%%%##**+---=--=========+++                 ", 
        "    =*###%%%%%#*#***+**+==-------===+*++*+              ", 
        "    *#**+=+*+++*#***++*#***+====---==+*+++++=           ", 
        "     #*++##++#++*##*+###%%##****+=+===+=-===+*+         ", 
        "     +*#@%#%#*++#%%#%#*+*####*+----===+=-===++*+        ", 
        "       =#*+***##%@%%*####+=-+*#+=-=+=====-=+++*#=       ", 
        "        *##%%%%@@@@@%*+=====++++=--==-=====+=+*#***     ", 
        "          #%%%%*%%%@%+==--=====**+======++=+++##++**==  ", 
        "         =+++=+*##%%*+=------==++++++++++******==++**   ", 
        "         ++*===*##%*===---==++++*#*******####*+==+***+  ", 
        "        =+**==+**##+==----====+*###%%%%%#*##**===+#***  ", 
        "         -*#++++*##====+=++**###%%@@@%*=-=++++=-++*#%#* ", 
        "         ==*++++###+=+++**##%%%%%%@@@#+====+*+==+==*#** ", 
        "        =+++###**+++++*#%%%%%%%%%%@@@%*++++***++=-=+*#*+",
        "       =++=+*#+=+*+=====++***##%%##%@@%**####+=--=+*##*+",
        "     ==+*++*#%*+**=====++++**####%%#%@@@%%%@%+--=++#%#**",
        "     =+*%###%%#*##*******##%##%#####%%%@@@%%#====+*###*+",
        "    =++*%%%%@%*+++=+++***##**#####%%##%@@%*++===+**+*%#+",
        "    =+*#%%@%%%#***++*++*###*####%%%*#%%#%%#++++**==+#%#*",
        "   :+**#%@%#%%%##########*+*#%%#%%##%#%%%%*==+++=++##%%*",
        "   =++*%%#*#%%*++**++*+++++**#%%%##%###%%%#*=+==+*#%#%#=",
        "   =*####*%%%*++**#*+++++***##%%%#%#***#%%##**+++*##%#*-",
        "  ++*##%%%#=+ =*####*#####%%%@@%%#%**+=+#%%###+***##%%+ ", 
        " =+++#%%#*-:: **#%%%%%%%%%%%@@%%%#**+++++#%@#*+***#%%#  ", 
        " =+++#%%*   =*##*#%%%%%%%@@@@%%%%###+*++**#*++***##%%#  ", 
        "+++##%%%*   +*##*###%%%%%@@@@%%####***#%%#*++=++**#%%#* ", 
        "***%@%%#+= *+****+**#%%%%@@@@%**+*##*##%####*++*###%%#* ", 
        "=*#%%#*#+ +++*+++##*#%%%%@@@@%##**#*+*+**#%#*+*##*#%#%# ", 
        " **##**+  ++*#++###*#%%%%%%##%##*+*#*++*##%%%*%%%%%%%%* ", 
        "  #**#*+  +*#**#**+*#%%%%%#=++##*#*##*###%%%%*#@%%#*    ", 
        "          =*#**+*#*#%@%%##*:==+*####%##%%%%%@@%*        ", 
        "         =+#++**###%@%%#*= ===-+##**#%#**#%@%%#*        ", 
        "         +*#######%%@%*++       +###%#****#%%%#+        ", 
        "         +*#%%@%%#%%#+  =        *###%####%%%%%#+       ", 
        "          *##%%%#%%%*+= .         +%%@@%###%%@%%%*+     ", 
        "         :+%%%#*#*+*#*+ .           *#%%%%%%@%%%%#*=    ", 
        "        ::+#%%##*+**%#*+.           =##%%%%#%%%%%#*+    ", 
        "         --+%###**####**            *#*#####%%%%%%#*    ", 
        "          -+*#%%%%%%%#*             +###%###%%%%%%#*    ", 
        "          :+####%%%%#+              -+#%#%##%%%%%%#=    ", 
        "           *##%##%%#+                 +######%%%%#=     ", 
        "         =*####%%%%#=                 =+%###%#%%%+=     ", 
        "        +++**#**#%%#+                   #%#####%#===+   ", 
        "      #*****###%%%##                  %%%%%%%%%%%=+     ", 
        "=+*%%%%%%%%%%%%%%%%%%%%              %%%%%%%%%%%%%%%%   " 
        },
        new WeaponModel(
            "Ragnarök Strain",              // Weapon Name
            7,                              // Weapon Damage
            50,                             // Hit Rate
            "You have hit the enemy!",      // Hit message
            "You missed the enemy homie!"   // Miss message
        )
    ) {}



========= ./BioEnhancedBerserkerModel.h =========
#ifndef BIO_ENHANCED_BERSERKER_MODEL_H
#define BIO_ENHANCED_BERSERKER_MODEL_H

#include "EntityModel.h"

class BioEnhancedBerserkerModel : public EntityModel {
public:
    BioEnhancedBerserkerModel();
};

#endif // BIO_ENHANCED_BERSERKER_MODEL_H


========= ./EntityModel.cpp =========
#include "EntityModel.h"

#include <iostream>
#include <vector>
using namespace std;
#include "../WeaponModel.h"

EntityModel::EntityModel(const std::string &name, int hp, int atk, int def, int magic, int crit, int evade, vector<string> ascii_art, WeaponModel *weapon)
    : name(name), hp(hp), atk(atk), def(def), magic(magic), crit(crit), evade(evade), ascii_art(move(ascii_art)), weapon(weapon) {}


void EntityModel::display_ascii() const {
    for (const auto& line : ascii_art) {
        std::cout << line << std::endl;
        }
}


void EntityModel::display_stats() const {
    std::cout 
        << "\n\n|---------------------------------|\n"
        << "|----| Printing Entity Stats |----|\n"
        << "|---------------------------------|\n"
        << "|\n"
        << "| " << "-- "+name+" --" << "\n"
        << "| HP: " << hp << "\n"
        << "| ATK: " << atk << "\n"
        << "| DEF: " << def << "\n"
        << "| MAGIC: " << magic << "\n"
        << "| CRIT: " << crit << "\n"
        << "| EVADE: " << evade << "\n|\n"
        << "|---------------------------------|\n\n";
}


WeaponModel *EntityModel::get_weapon(){
    return this->weapon;
}




    
//============================================//
//======= TOMMI OLD CODE FOR REFERENCE =======//
//============================================//

// #include "EntityParentModel.h"
// #include <iostream>

// // Constructor for base class Entity
// Entity::Entity(const std::string &name, int hp, int atk, int def, int magic, int crit, int evade)
//     : name(name), hp(hp), atk(atk), def(def), magic(magic), crit(crit), evade(evade) {}

// // TechnoOracle implementation
// TechnoOracle::TechnoOracle()
//     : Entity("Techno Oracle", 60, 10, 5, 70, 15, 10) {}

// void TechnoOracle::display_stats() const {
//     std::cout << name << "\n"
//               << "HP: " << hp << "\n"
//               << "ATK: " << atk << "\n"
//               << "DEF: " << def << "\n"
//               << "MAGIC: " << magic << "\n"
//               << "CRIT: " << crit << "\n"
//               << "EVADE: " << evade << "\n\n";
// }

// // CyberGladiator implementation
// CyberGladiator::CyberGladiator()
//     : Entity("Cyber Gladiator", 100, 50, 50, 5, 10, 10) {}

// void CyberGladiator::display_stats() const {
//     std::cout << name << "\n"
//               << "HP: " << hp << "\n"
//               << "ATK: " << atk << "\n"
//               << "DEF: " << def << "\n"
//               << "MAGIC: " << magic << "\n"
//               << "CRIT: " << crit << "\n"
//               << "EVADE: " << evade << "\n\n";
// }

// // BioEnhancedBerserker implementation
// BioEnhancedBerserker::BioEnhancedBerserker()
//     : Entity("Bio-Enhanced Berserker", 150, 30, 60, 5, 5, 5) {}

// void BioEnhancedBerserker::display_stats() const {
//     std::cout << name << "\n"
//               << "HP: " << hp << "\n"
//               << "ATK: " << atk << "\n"
//               << "DEF: " << def << "\n"
//               << "MAGIC: " << magic << "\n"
//               << "CRIT: " << crit << "\n"
//               << "EVADE: " << evade << "\n\n";
// }


========= ./CyberGladiatorModel.h =========
#ifndef CYBER_GLADIATOR_MODEL_H
#define CYBER_GLADIATOR_MODEL_H

#include "EntityModel.h"

class CyberGladiatorModel : public EntityModel {
public:
    CyberGladiatorModel();
};

#endif // CYBER_GLADIATOR_MODEL_H


========= Directory Structure =========
.
├── BioEnhancedBerserkerModel.cpp
├── BioEnhancedBerserkerModel.h
├── CyberGladiatorModel.cpp
├── CyberGladiatorModel.h
├── data
│   └── all_files_1.txt
├── EntityModel.cpp
├── EntityModel.h
├── print_all.sh
├── TechnoOracleModel.cpp
└── TechnoOracleModel.h

2 directories, 10 files
